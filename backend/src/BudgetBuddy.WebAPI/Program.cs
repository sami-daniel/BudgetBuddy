using System.Reflection;
using BudgetBuddy.WebAPI.Services;
using Microsoft.OpenApi.Models;

namespace BudgetBuddy.WebAPI;

public class Program
{
    public static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);
        builder.Services.AddControllers();
        builder.Services.AddRouting(options =>
        {
            options.LowercaseUrls = true;
            options.LowercaseQueryStrings = true;
        });

        // Add services to the container.
        // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle

        builder.Services.AddEndpointsApiExplorer();
        builder.Services.AddSwaggerGen(options => 
        {
            options.SwaggerDoc("v1", new OpenApiInfo
            {
                Version = "v1",
                Title = "BudgetBuddy API V1",
                Description = "Uma Web API ASP.NET Core para controle financeiro, totalmente personalizavel"
            });

            // Get the XML comments file generated by swagger and include it in the Swagger UI
            var xmlFilename = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
            options.IncludeXmlComments(Path.Combine(AppContext.BaseDirectory, xmlFilename));
        });

        // The container DI is configured by the IoC project to isolate the WebAPI project from the rest of the application
        builder.Services.AddLayeredServices();

        var app = builder.Build();

        // Configure the HTTP request pipeline.
#if DEBUG
        app.UseSwagger();
        app.UseSwaggerUI();
#endif

#if DEBUG
        if (app.Environment.IsProduction())
        {
            app.UseHttpsRedirection();
        }
#endif

        app.MapControllers();

        app.Run();

    }
}
